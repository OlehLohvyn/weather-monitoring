version: '3.8'

services:
  web-app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_HOST=database
      - DB_NAME=weather_db
      - DB_USER=weather_user
      - DB_PASS=weather_password
      - DB_PORT=5432
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  database:
    image: postgres:14.6-alpine
    container_name: weather_postgres
    restart: always
    environment:
      - POSTGRES_DB=weather_db
      - POSTGRES_USER=weather_user
      - POSTGRES_PASSWORD=weather_password
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "weather_user", "-d", "weather_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  celery-worker:
    build: .
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=weather_db
      - DB_USER=weather_user
      - DB_PASS=weather_password
      - DB_PORT=5432


volumes:
  pg_data:
