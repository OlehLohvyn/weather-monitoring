services:
  celery-worker:
    build:
      context: ../backend
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
      web-app:
        condition: service_started
    env_file:
      - ../.env

  celery-beat:
    build:
      context: ../backend
    command: >
      sh -c "
            python manage.py wait_for_db &&
            until python manage.py showmigrations django_celery_beat | grep '\[X\]'; do
              echo 'Waiting for migrations to be applied django_celery_beat...';
              sleep 2;
            done;
            celery -A app beat --loglevel=info"

    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
      web-app:
        condition: service_started
    env_file:
      - ../.env
